{"version":3,"file":"static/js/206.939f12cd.chunk.js","mappings":"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","sources":["helpers/errorReject.js","api/params.js","api/default.js","api/api.js","components/Error/Error.styled.js","components/Error/Error.js","components/ImgPlug/ImgPlug.styled.js","components/ImgPlug/ImgPlug.js","consts.js","components/ButtonLink/ButtonLink.styled.js","components/ButtonLink/ButtonLink.js","components/AddInfoMovie/AddInfoMovie.styled.js","components/AddInfoMovie/AddInfoMovie.js","helpers/reduceGenres.js","components/AboutMovie/AboutMovie.styled.js","components/AboutMovie/AboutMovie.js","pages/MovieDetailes.js"],"sourcesContent":["export const errorFunction = () =>\n  Promise.reject(\n    new Error('Ой! Что то пошло не так. Попробуйте перезапустить страницу')\n  );\n","export const params = {\n  api_key: '13311e11047b48cfd8c9963a1d63772d',\n  language: 'en-US',\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n","import axios from 'axios';\nimport { errorFunction } from 'helpers/errorReject';\nimport { params } from './params';\nimport './default';\n\nexport const fetchForTrend = async () => {\n  try {\n    const resp = await axios.get('/trending/all/day', {\n      params,\n    });\n\n    return resp.data.results;\n  } catch (error) {\n    return errorFunction();\n  }\n};\n\nexport const fetchForMovieDetailes = async movieId => {\n  try {\n    const resp = await axios.get(`/movie/${movieId}`, {\n      params,\n    });\n\n    return resp.data;\n  } catch (error) {\n    return errorFunction();\n  }\n};\n\nexport const fetchForSearch = async query => {\n  try {\n    const resp = await axios.get('/search/movie', {\n      params: { ...params, query },\n    });\n\n    return resp.data.results;\n  } catch (error) {\n    return errorFunction();\n  }\n};\n\nexport const fetchForCast = async movieId => {\n  try {\n    const resp = await axios.get(`/movie/${movieId}/credits`, {\n      params,\n    });\n\n    return resp.data.cast;\n  } catch (error) {\n    return errorFunction();\n  }\n};\n\nexport const fetchForReviews = async movieId => {\n  try {\n    const resp = await axios.get(`/movie/${movieId}/reviews`, {\n      params,\n    });\n\n    return resp.data.results;\n  } catch (error) {\n    return errorFunction();\n  }\n};\n","import styled from '@emotion/styled';\n\nexport const ErrorMessage = styled.h2`\n  color: red;\n  text-align: center;\n`;\n","import { ErrorMessage } from './Error.styled';\n\nexport const Error = ({ children }) => <ErrorMessage>{children}</ErrorMessage>;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: ${props => props.width};\n  height: ${props => props.height};\n  background-color: lightgrey;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import { Container } from './ImgPlug.styled';\nimport PropTypes from 'prop-types';\n\nexport const ImgPlug = ({ width, height }) => (\n  <div>\n    <Container width={width} height={height}>\n      No picture(\n    </Container>\n  </div>\n);\n\nImgPlug.propTypes = {\n  width: PropTypes.string.isRequired,\n  height: PropTypes.string.isRequired,\n};\n","export const imgOrigin = 'https://image.tmdb.org/t/p/w500';\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const LinkButton = styled(Link)`\n  display: inline-block;\n  text-decoration: none;\n  background-color: aqua;\n  margin: 8px 0;\n  padding: 8px 12px;\n  transition: 300ms;\n\n  :hover,\n  :focus {\n    background-color: aquamarine;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { LinkButton } from './ButtonLink.styled';\n\nexport const ButtonLink = ({ children, path }) => (\n  <LinkButton to={path}>{children}</LinkButton>\n);\n\nButtonLink.propTypes = {\n  path: PropTypes.object.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const AddInfo = styled.div`\n  padding: 8px;\n  box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px;\n\n  & li:first-of-type {\n    margin-bottom: 4px;\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport { AddInfo } from './AddInfoMovie.styled';\n\nexport const AddInfoMovie = () => (\n  <AddInfo>\n    <h3>Additional information</h3>\n\n    <ul>\n      <li>\n        <Link to=\"cast\">Cast</Link>\n      </li>\n      <li>\n        <Link to=\"reviews\">Reviews</Link>\n      </li>\n    </ul>\n  </AddInfo>\n);\n","export const reduceGenres = genres =>\n  genres.reduce((str, { name }) => `${str}, ${name}`, '').slice(2);\n","import styled from '@emotion/styled';\n\nexport const MovieWrap = styled.div`\n  display: flex;\n  margin-bottom: 8px;\n`;\n\nexport const MovieInfoWrap = styled.div`\n  padding: 24px;\n`;\n\nexport const Poster = styled.img`\n  align-self: start;\n`;\n\nexport const AddInfo = styled.div`\n  padding: 8px;\n  box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px;\n\n  & li:first-of-type {\n    margin-bottom: 4px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { ImgPlug } from 'components/ImgPlug';\nimport { imgOrigin } from 'consts';\nimport { reduceGenres } from 'helpers/reduceGenres';\nimport { MovieInfoWrap, MovieWrap, Poster } from './AboutMovie.styled';\n\nexport const AboutMovie = ({\n  movie: {\n    poster_path,\n    title,\n    name,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  },\n}) => (\n  <MovieWrap>\n    {poster_path ? (\n      <Poster\n        src={`${imgOrigin}${poster_path}`}\n        alt={title ? title : name}\n        width=\"300\"\n        height=\"450\"\n      />\n    ) : (\n      <ImgPlug width=\"300px\" height=\"450px\" />\n    )}\n    <MovieInfoWrap>\n      <h2>\n        {title ? title : name} ({release_date.slice(0, 4)})\n      </h2>\n      <p>User score: {Math.round(vote_average * 10)}%</p>\n      <h3>Overview</h3>\n      <p>{overview}</p>\n      <h3>Genres</h3>\n      <p>{genres.length !== 0 ? reduceGenres(genres) : 'No genres'}</p>\n    </MovieInfoWrap>\n  </MovieWrap>\n);\n\nAboutMovie.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n    name: PropTypes.string,\n    release_date: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.exact({\n        id: PropTypes.number,\n        name: PropTypes.string,\n      })\n    ),\n  }).isRequired,\n};\n","import { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { fetchForMovieDetailes } from 'api/api';\nimport { Error } from 'components/Error';\nimport { ButtonLink } from 'components/ButtonLink';\nimport { AddInfoMovie } from 'components/AddInfoMovie';\nimport { AboutMovie } from 'components/AboutMovie';\n\nconst MovieDetailes = () => {\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backHref = useRef(location.state ?? '/movies');\n\n  useEffect(() => {\n    fetchForMovieDetailes(movieId)\n      .then(data => setMovie(data))\n      .catch(error => setError(error));\n  }, [movieId]);\n\n  return (\n    <>\n      <ButtonLink path={backHref.current}>Go back</ButtonLink>\n      {movie && (\n        <>\n          <AboutMovie movie={movie} />\n          <AddInfoMovie />\n        </>\n      )}\n\n      {error && <Error>{error.message}</Error>}\n\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetailes;\n"],"names":["errorFunction","Promise","reject","Error","params","api_key","language","axios","fetchForTrend","resp","data","results","fetchForMovieDetailes","movieId","fetchForSearch","query","fetchForCast","cast","fetchForReviews","ErrorMessage","styled","children","Container","props","width","height","ImgPlug","imgOrigin","LinkButton","Link","ButtonLink","path","to","AddInfo","AddInfoMovie","reduceGenres","genres","reduce","str","name","slice","MovieWrap","MovieInfoWrap","Poster","AboutMovie","movie","poster_path","title","release_date","vote_average","overview","src","alt","Math","round","length","useState","setMovie","error","setError","useParams","location","useLocation","backHref","useRef","state","useEffect","then","catch","current","message","Suspense","fallback"],"sourceRoot":""}