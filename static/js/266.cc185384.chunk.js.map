{"version":3,"file":"static/js/266.cc185384.chunk.js","mappings":"+SAAaA,EAAgB,SAAAC,GAAK,OAChCC,QAAQC,OAAO,IAAIC,MAAJ,UAAaH,EAAb,kMADiB,E,SCGlCI,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAASC,EAAAA,EACTC,SAAU,SCHL,IAAMC,EAAa,mCAAG,6GAENJ,EAAAA,EAAAA,IAAU,qBAFJ,cAEnBK,EAFmB,yBAIlBA,EAAKC,KAAKC,SAJQ,yDAMlBZ,EAAc,yJANI,yDAAH,qDAUba,EAAqB,mCAAG,WAAMC,GAAN,gGAEdT,EAAAA,EAAAA,IAAA,iBAAoBS,IAFN,cAE3BJ,EAF2B,yBAI1BA,EAAKC,MAJqB,yDAM1BX,EAAc,8LANY,yDAAH,sDAUrBe,EAAc,mCAAG,WAAMC,GAAN,gGAEPX,EAAAA,EAAAA,IAAU,gBAAiB,CAC5CY,OAAQ,CAAED,MAAAA,KAHc,cAEpBN,EAFoB,yBAMnBA,EAAKC,KAAKC,SANS,yDAQnBZ,EAAc,yJARK,yDAAH,sDAYdkB,EAAY,mCAAG,WAAMJ,GAAN,gGAELT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,aAFK,cAElBJ,EAFkB,yBAIjBA,EAAKC,KAAKQ,MAJO,yDAMjBnB,EAAc,gNANG,yDAAH,sDAUZoB,EAAe,mCAAG,WAAMN,GAAN,gGAERT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,aAFQ,cAErBJ,EAFqB,yBAIpBA,EAAKC,KAAKC,SAJU,yDAMpBZ,EAAc,yJANM,yDAAH,qD,qEC5CfqB,E,OAAeC,EAAAA,GAAH,8D,SCAZlB,EAAQ,SAAC,GAAD,IAAGmB,EAAH,EAAGA,SAAH,OAAkB,SAACF,EAAD,UAAeE,GAAjC,C,6ECFrB,IAAMC,EAAY,kCACZjB,EAAU,kC,+FCsChB,UAlCa,WACX,OAA4BkB,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOxB,EAAP,KAAc2B,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAWjB,OATAC,EAAAA,EAAAA,YAAU,WACRH,EAAS,MACTD,EAAU,OAEVlB,EAAAA,EAAAA,MACGuB,MAAK,SAAArB,GAAI,OAAIgB,EAAUhB,EAAd,IACTsB,OAAM,SAAAhC,GAAK,OAAI2B,EAAS3B,EAAb,GACf,GAAE,KAGD,iCACE,4CAEA,wBACGyB,GACCA,EAAOQ,KAAI,SAAAC,GAAK,OACd,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAOT,EAAxC,SACGM,EAAMI,MAAQJ,EAAMI,MAAQJ,EAAMK,QAF9BL,EAAME,GADD,MASnBpC,IAAS,SAAC,IAAD,UAAQA,EAAMwC,YAG7B,C","sources":["helpers/errorReject.js","api/default.js","api/api.js","components/Error/Error.styled.js","components/Error/Error.js","consts.js","pages/Home.js"],"sourcesContent":["export const errorFunction = error =>\n  Promise.reject(new Error(`${error} Попробуйте перезагрузить страницу`));\n","import axios from 'axios';\nimport { API_KEY } from 'consts';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n","import axios from 'axios';\nimport { errorFunction } from 'helpers/errorReject';\nimport './default';\n\nexport const fetchForTrend = async () => {\n  try {\n    const resp = await axios.get('/trending/all/day');\n\n    return resp.data.results;\n  } catch (error) {\n    return errorFunction('Не удалось загрузить тренды.');\n  }\n};\n\nexport const fetchForMovieDetailes = async movieId => {\n  try {\n    const resp = await axios.get(`/movie/${movieId}`);\n\n    return resp.data;\n  } catch (error) {\n    return errorFunction('Не удалось загрузить детали фильма.');\n  }\n};\n\nexport const fetchForSearch = async query => {\n  try {\n    const resp = await axios.get('/search/movie', {\n      params: { query },\n    });\n\n    return resp.data.results;\n  } catch (error) {\n    return errorFunction('Не удалось загрузить фильмы.');\n  }\n};\n\nexport const fetchForCast = async movieId => {\n  try {\n    const resp = await axios.get(`/movie/${movieId}/credits`);\n\n    return resp.data.cast;\n  } catch (error) {\n    return errorFunction('Не удалось загрузить актерский состав.');\n  }\n};\n\nexport const fetchForReviews = async movieId => {\n  try {\n    const resp = await axios.get(`/movie/${movieId}/reviews`);\n\n    return resp.data.results;\n  } catch (error) {\n    return errorFunction('Не удалось загрузить отзывы.');\n  }\n};\n","import styled from '@emotion/styled';\n\nexport const ErrorMessage = styled.h2`\n  color: red;\n  text-align: center;\n`;\n","import { ErrorMessage } from './Error.styled';\n\nexport const Error = ({ children }) => <ErrorMessage>{children}</ErrorMessage>;\n","const imgOrigin = 'https://image.tmdb.org/t/p/w500';\nconst API_KEY = '13311e11047b48cfd8c9963a1d63772d';\n\nexport { imgOrigin, API_KEY };\n","import { fetchForTrend } from 'api/api';\nimport { Error } from 'components/Error/Error';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst Home = () => {\n  const [trends, setTrends] = useState(null);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    setError(null);\n    setTrends(null);\n\n    fetchForTrend()\n      .then(data => setTrends(data))\n      .catch(error => setError(error));\n  }, []);\n\n  return (\n    <>\n      <h1>Trending today</h1>\n\n      <ul>\n        {trends &&\n          trends.map(trend => (\n            <li key={trend.id}>\n              <Link to={`/movies/${trend.id}`} state={location}>\n                {trend.title ? trend.title : trend.name}\n              </Link>\n            </li>\n          ))}\n      </ul>\n\n      {error && <Error>{error.message}</Error>}\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["errorFunction","error","Promise","reject","Error","axios","api_key","API_KEY","language","fetchForTrend","resp","data","results","fetchForMovieDetailes","movieId","fetchForSearch","query","params","fetchForCast","cast","fetchForReviews","ErrorMessage","styled","children","imgOrigin","useState","trends","setTrends","setError","location","useLocation","useEffect","then","catch","map","trend","to","id","state","title","name","message"],"sourceRoot":""}